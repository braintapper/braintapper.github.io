[
  {
    "title": "Clips vs. Notes",
    "tags": null,
    "publish_date": "2020-02-04 12:00",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\nAll-in-one software tools can be very useful, as they can consolidate multiple functions while minimizing window proliferation, etc.\n\nFor example, I recently got introduced to a nifty ([albeit](https://www.snowflake.com/) unfortunately named) little tool called [Snowflake](https://github.com/subhra74/snowflake), which lets me have terminal windows and an SFTP file browser contained within a single window. While imperfect, I find it works better for me than using WinSCP.\n\nSnowflake, however, is a *utility*.  All-in-one applications in other contexts may not offer the same benefits. If you haven't already gathered it from the title, I am no longer a fan of using an all-in-one system for notes and web clips.\n\nCapturing data is a little different than a utility in that you're *accumulating* data into an ever-growing bucket. And if your tool is collecting different types of data, that bucket is going to get harder and harder to navigate over time.\n\nYes, you can categorize and classify, but that is *work*. And by *work*, I mean time and mental effort. It then begs the question of how much time do you want to spend managing that ever-growing, ultimately unsustainable bucket of data.\n\nI used to use Evernote for self-created notes and clippings. I thought it was great, especially the web clipper, but after years of accumulating thousands of items, I realized that all-in-one data collection was a romantic notion more than it was a practical one. In other words, I was in love with the idea, but not the execution.\n\nThis realization didn't really materialize until I spent time hunting for alternatives to Evernote. It wasn't so much that there are not good alternatives to Evernote. There are plenty of good alternatives to Evernote, such as OneNote and [Joplin](https://joplinapp.org/).\n\nThe problem is that Evernote and its ilk are simply not a good model of data collection for *me*. I found that mixing in my notes with clipped content in the same tool just created a mountain of data that got hard to sift through. And with that realization, I decided to separate out my note taking and web clipping requirements into two discrete applications.\n\nFor notes these days, I basically just use a folder in Dropbox that contains a combination of [markdown](https://en.wikipedia.org/wiki/Markdown) and [Dropbox Paper](/blog/dropbox-paper-is-surprisingly-good) documents.\n\nFor clipping, I use [Wallabag](https://wallabag.org/en), which is similar to Instapaper.\n\nI have found this segregation of data to be very useful in terms of my daily workflow. That Wallabag will scrape URLs (it is mostly successful in its attempts) is also handy in that I don't have to worry about broken links in the distant future.\n\nBy eliminating clips from my notes, it's now much easier to find what I'm looking for, and it's been working very well for me.\n\nOf course, I need to add the obligatory \"your mileage may vary\" disclaimer, but if you're finding yourself struggling with information overload because you're using an all-in-one data collection tool, maybe the best fix is to break up your solution into multiple tools.\n",
    "html": "<p>All-in-one software tools can be very useful, as they can consolidate multiple functions while minimizing window proliferation, etc.</p>\n<p>For example, I recently got introduced to a nifty (<a href=\"https://www.snowflake.com/\">albeit</a> unfortunately named) little tool called <a href=\"https://github.com/subhra74/snowflake\">Snowflake</a>, which lets me have terminal windows and an SFTP file browser contained within a single window. While imperfect, I find it works better for me than using WinSCP.</p>\n<p>Snowflake, however, is a <em>utility</em>.  All-in-one applications in other contexts may not offer the same benefits. If you haven&#39;t already gathered it from the title, I am no longer a fan of using an all-in-one system for notes and web clips.</p>\n<p>Capturing data is a little different than a utility in that you&#39;re <em>accumulating</em> data into an ever-growing bucket. And if your tool is collecting different types of data, that bucket is going to get harder and harder to navigate over time.</p>\n<p>Yes, you can categorize and classify, but that is <em>work</em>. And by <em>work</em>, I mean time and mental effort. It then begs the question of how much time do you want to spend managing that ever-growing, ultimately unsustainable bucket of data.</p>\n<p>I used to use Evernote for self-created notes and clippings. I thought it was great, especially the web clipper, but after years of accumulating thousands of items, I realized that all-in-one data collection was a romantic notion more than it was a practical one. In other words, I was in love with the idea, but not the execution.</p>\n<p>This realization didn&#39;t really materialize until I spent time hunting for alternatives to Evernote. It wasn&#39;t so much that there are not good alternatives to Evernote. There are plenty of good alternatives to Evernote, such as OneNote and <a href=\"https://joplinapp.org/\">Joplin</a>.</p>\n<p>The problem is that Evernote and its ilk are simply not a good model of data collection for <em>me</em>. I found that mixing in my notes with clipped content in the same tool just created a mountain of data that got hard to sift through. And with that realization, I decided to separate out my note taking and web clipping requirements into two discrete applications.</p>\n<p>For notes these days, I basically just use a folder in Dropbox that contains a combination of <a href=\"https://en.wikipedia.org/wiki/Markdown\">markdown</a> and <a href=\"/blog/dropbox-paper-is-surprisingly-good\">Dropbox Paper</a> documents.</p>\n<p>For clipping, I use <a href=\"https://wallabag.org/en\">Wallabag</a>, which is similar to Instapaper.</p>\n<p>I have found this segregation of data to be very useful in terms of my daily workflow. That Wallabag will scrape URLs (it is mostly successful in its attempts) is also handy in that I don&#39;t have to worry about broken links in the distant future.</p>\n<p>By eliminating clips from my notes, it&#39;s now much easier to find what I&#39;m looking for, and it&#39;s been working very well for me.</p>\n<p>Of course, I need to add the obligatory &quot;your mileage may vary&quot; disclaimer, but if you&#39;re finding yourself struggling with information overload because you&#39;re using an all-in-one data collection tool, maybe the best fix is to break up your solution into multiple tools.</p>\n",
    "timestamp": "2020-02-04T17:00:00.000Z",
    "year": 2020,
    "month": 2,
    "month_name": "February",
    "day": 4,
    "slug": "clips-versus-notes"
  },
  {
    "title": "Apps > Install this site as an app",
    "tags": null,
    "publish_date": "2020-01-29 11:45",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\n# Confessions of a Tab Hoarder\n\nI've been using [Edge Chromium](https://www.microsoft.com/en-us/edge) as my primary browser on Windows for quite some time now, and I like it *a lot*. In the past few months, I don't think I've opened up Chrome on Windows except by mistake. Honestly, I don't miss Chrome at all.\n\nI've always had a bad habit of having too many tabs open (often more than 50). More often than not, instead of trying to find an existing tab, I'll just open a duplicate, which exacerbates my problem.\n\n# Roll Your Own PWA\n\nEdge has a very cool feature that lets you roll your own PWA ([progressive web application](https://developer.microsoft.com/en-us/windows/pwa)) out of a web site. In other words, it will create a single-site application that is accessible from the Windows Start menu. It also means that the generated PWA gets its own spot on your taskbar, using the site's [favicon](https://en.wikipedia.org/wiki/Favicon) as the icon. No more tab hunting.\n\nFor a tab hoarder like me, this is a life changing feature. I have a ton of web apps that I'm constantly using throughout the day, so this makes life a lot easier.\n\nAs always, there's a catch. The feature doesn't work great with all sites/web apps. If the web app you're using has to proliferate new tabs or windows, it's not a great candidate, as those tabs/windows will open up in Edge. For example, if you're thinking this technique is a great way to use Dropbox Paper or Google Apps<sup>1</sup>, you're wrong.\n\nOn the other hand, if you're using it for something like Feedly, Github or PGAdmin4, it's great. I have a lot of containerized web apps like [PiHole](https://pi-hole.net/) that work great as PWAs.\n\nSo how do you enable this magical feature?\n\nIf you're running Edge for Chromium, just browse to a site (ideally, you go to the exact page you want to start from, since that will be the page you see when launching the PWA), go to the menu, `Apps` > `Install this site as an app`. Give the app a new name if the default isn't to your liking, and **bam**, you're done!\n\n# Footnotes\n\n1. If you're looking for a way to handle multiple Google accounts for email and calendaring, check out [Easymail for Gmail](https://easymailforgmail.com/). I bought a license during the 1.x days, and it was fine but not something I could use daily. The latest release, 2.x, is a complete rewrite, and works much better than the previous iteration. Full disclosure, I wasn't paid to say that.\n",
    "html": "<h1 id=\"confessions-of-a-tab-hoarder\">Confessions of a Tab Hoarder</h1>\n<p>I&#39;ve been using <a href=\"https://www.microsoft.com/en-us/edge\">Edge Chromium</a> as my primary browser on Windows for quite some time now, and I like it <em>a lot</em>. In the past few months, I don&#39;t think I&#39;ve opened up Chrome on Windows except by mistake. Honestly, I don&#39;t miss Chrome at all.</p>\n<p>I&#39;ve always had a bad habit of having too many tabs open (often more than 50). More often than not, instead of trying to find an existing tab, I&#39;ll just open a duplicate, which exacerbates my problem.</p>\n<h1 id=\"roll-your-own-pwa\">Roll Your Own PWA</h1>\n<p>Edge has a very cool feature that lets you roll your own PWA (<a href=\"https://developer.microsoft.com/en-us/windows/pwa\">progressive web application</a>) out of a web site. In other words, it will create a single-site application that is accessible from the Windows Start menu. It also means that the generated PWA gets its own spot on your taskbar, using the site&#39;s <a href=\"https://en.wikipedia.org/wiki/Favicon\">favicon</a> as the icon. No more tab hunting.</p>\n<p>For a tab hoarder like me, this is a life changing feature. I have a ton of web apps that I&#39;m constantly using throughout the day, so this makes life a lot easier.</p>\n<p>As always, there&#39;s a catch. The feature doesn&#39;t work great with all sites/web apps. If the web app you&#39;re using has to proliferate new tabs or windows, it&#39;s not a great candidate, as those tabs/windows will open up in Edge. For example, if you&#39;re thinking this technique is a great way to use Dropbox Paper or Google Apps<sup>1</sup>, you&#39;re wrong.</p>\n<p>On the other hand, if you&#39;re using it for something like Feedly, Github or PGAdmin4, it&#39;s great. I have a lot of containerized web apps like <a href=\"https://pi-hole.net/\">PiHole</a> that work great as PWAs.</p>\n<p>So how do you enable this magical feature?</p>\n<p>If you&#39;re running Edge for Chromium, just browse to a site (ideally, you go to the exact page you want to start from, since that will be the page you see when launching the PWA), go to the menu, <code>Apps</code> &gt; <code>Install this site as an app</code>. Give the app a new name if the default isn&#39;t to your liking, and <strong>bam</strong>, you&#39;re done!</p>\n<h1 id=\"footnotes\">Footnotes</h1>\n<ol>\n<li>If you&#39;re looking for a way to handle multiple Google accounts for email and calendaring, check out <a href=\"https://easymailforgmail.com/\">Easymail for Gmail</a>. I bought a license during the 1.x days, and it was fine but not something I could use daily. The latest release, 2.x, is a complete rewrite, and works much better than the previous iteration. Full disclosure, I wasn&#39;t paid to say that.</li>\n</ol>\n",
    "timestamp": "2020-01-29T16:45:00.000Z",
    "year": 2020,
    "month": 1,
    "month_name": "January",
    "day": 29,
    "slug": "apps-install-this-site-as-an-app"
  },
  {
    "title": "Dropbox Paper Is Surprisingly Good",
    "tags": null,
    "publish_date": "2020-01-23 16:30",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\n# Note Taking Hell\n\nIt's no secret that I've been hunting for the \"perfect\" note taking application for years now.\n\nI dropped Evernote a few years ago as a multi-purpose tool, and have been trying to find a replacement ever since.\n\nNote taking is a very personal in that you develop some very specific tool and/or process preferences that you don't really want to compromise on. What works for one person may not work for another.\n\n\n# My Own Criteria\n\nFor me, my core requirements, in no particular order (they are numbered for reference), are/*were*:\n\n\n1. A Windows native desktop client\n2. The ability to have my notes in a hierarchical file structure that was available in a tree view (more important on the desktop than mobile)\n3. Cloud sync or storage\n4. Live conversion from [Markdown](https://en.wikipedia.org/wiki/Markdown) to formatted text *without* having a preview pane\n5. Ability to *access* and *read* my notes from my Android phone. Editing and creating is only a *nice to have*, since I'm pretty much useless with a touchscreen keyboard.\n6. The occasional ability to collaborate on notes/docs with others (this one's not a deal breaker)\n\nCriteria that I *thought* were important but ended up being unimportant:\n\n\n- Web clipping\n- Pen support\n\nI always found that web clipping polluted my notes a little, and I recently switched to using [Wallabag](https://wallabag.org/en) for all my bookmarks and web clippings. Wallabag is very similar to Pocket, and it's been working well for me so far.\n\nFor years, I've had this crazy notion that I wanted an electronic version of the paper notebook that I bring to meetings. The problem is that the available solutions work better in my imagination than they do in real life. I've pretty much given up on the idea of a stylus-based tool, and no longer consider it meaningful criteria in determining what type of note taking tool(s) I use.\n\n\n# Options I Considered\n\nWith my criteria considered, some picks I tried and considered were:\n\n\n- A folder full of Markdown files\n- OneNote\n- Google Docs\n- [Joplin](https://joplinapp.org/)\n- [WikiJS](https://wiki.js.org/)\n- [Bookstack](https://www.bookstackapp.com/)\n- [Dokuwiki](https://www.dokuwiki.org/dokuwiki)\n- [MarkText](https://marktext.app/)\n\nThe one option that did look good to me was [Bear.app](https://bear.app/), but it's really only for people in the Apple ecosystem, which I'm no longer a part of.\n\nEven if they do eventually support Windows and Android, I don't know that I'd switch to Bear, given my experience with applications that are Apple-centric. For example, I've always felt like the Windows and Android clients for 1Password were second-class citizens in terms of the product line.\n\n\n## A folder full of Markdown files\n\nOne of the first things I tried was a Dropbox folder full of notes using a text editor like [Sublime Text](https://www.sublimetext.com/). This method wasn't horrible, but the problem is that I have multiple text editors open at any given time, and it got hard finding the right window. Having said that, the solution I'm using now has the same problem, except within a web browser.\n\nRequirements satisfied: 1, 2, 3, 5\n\n\n## OneNote\n\nI have a love/hate relationship with OneNote. On one hand, it's very powerful, on the other hand, it has so many user interface quirks that drive me bonkers. It's also not really a Markdown centric tool, even though it has a few Markdown-like shortcuts, like using asterisks to start bullet lists.\n\nRequirements satisfied: 1, 2, 3, 4 (limited), 5, 6\n\n\n## Google Docs\n\nGoogle Docs is fine, but the experience feels more like using a traditional word processor than a note taking tool. Also, it's not Markdown centric.\n\nRequirements satisfied: 2, 3, 4 (limited), 5, 6\n\n\n## Joplin\n\nJoplin is a Markdown centric alternative to Evernote. It lets you sync your notes using Dropbox. It's pretty good, and has a web clipper that works quite well. I think the main weakness of Joplin is that it it doesn’t do live Markdown conversion the way I’d like it to.\n\nRequirements satisfied: 1, 2, 3, 5\n\n\n## WikiJS\n\nWikiJS is a self-hosted wiki. It has a *lot* of potential, but as of the time of writing, it's not quite there yet for me to want to use it daily. To be able to use it outside of my LAN, however, I'd have to open up a firewall port, or host it on a server somewhere, which is something I’m not interested in doing.\n\nRequirements satisfied: 2, 3, 5, 6\n\n\n## Bookstack\n\nBookstack must be *the* most recommended note taking tool on [/r/selfhosted](https://www.reddit.com/r/selfhosted). I gave it a shot, bailed, and then gave it a shot again. For note taking, it had way too many quirks with respect to the user interface that just annoyed the hell out of me. If, however, I was authoring a book, it would probably be my first choice for that task.\n\nRequirements satisfied: 2, 3, 5, 6\n\n\n## Dokuwiki\n\nDokuwiki is a simple file based Wiki. It's ok, but I struggled with the idea of using it every day. It just wasn't very enjoyable to use.\n\nRequirements satisfied: 2, 3, 5, 6\n\n\n## MarkText\n\nMarkText is similar to Bear, but lacking much of Bear's polish. It has a lot of potential, but it's still too buggy and quirky at the time of writing.\n\nRequirements satisfied: 1, 2, 3, 4, 5\n\n\n# No Clear Winners\n\nSo there is obviously no tool that checks all of my 6 main requirements completely. Short of writing my own tool (which I considered, but decided I had other projects more worthy of my time), I had to give up on 100% coverage of my requirements. The solution I ultimately choose would obviously require me to compromise on what I want.\n\n\n# Revisiting Paper\n\nI tried Paper way back when Dropbox announced it, but honestly, it left no lasting impression on me.\n\nI gave it another cursory shot a few weeks ago (after upgrading to a paid Dropbox subscription), and discovered that its live Markdown conversion is *excellent*. It is definitely better than MarkText in this regard.\n\nIt wasn't until I had to collaborate on a server installation document that I was truly sold on Paper.\nBefore I get into the nuts and bolts of Paper, the requirements it satisfies are 2, 3, 4, 5, 6.\nRight now, there's no desktop client that's been released to the public. I'm hoping they release *something*, even if it's just an Electron app. I need something that occupies its own button on my taskbar instead of having to cycle through my browser windows to find my Notes. Having said that, in daily use, I am finding that Paper is a fantastic note taking tool.\n\n\n## Markdown Support\n\nThe live conversion of Markdown works very well in Paper. The reason why Markdown support is so important to me is that it saves me a lot of time. When I'm writing documentation, the ability to style documents using markup alone is incredibly powerful. There is no mousing around for styling or setting heading levels. I find pumping out documentation to be a noticeably faster and smoother experience.\n\nSo not only do I now use Paper for notes, I also use it for work-related documents.\n\nWhere I can, I'm actually writing documentation in Paper and exporting to Word or PDF.\nI can say without any reservations that the editing experience in Paper is the main driver for it being my daily writing tool, *in spite* of any glaring weaknesses it may have.\n\n\n\n## Other Useful Features and Details\n\nThe checklist feature in Dropbox is pretty darned cool. You can assign dates and people to checklist items, and get notifications too. Paper can also aggregate the checklists on all your Paper documents into a single view.\n\nThe implementation of this feature has me rethinking how I approach project management tools in general. I still have to do some practical experiments with Paper in this regard, but I have a feeling that it can do what I need, which is saying a lot.\n\nThere's a Timeline feature that lets you insert a horizontal timeline, which can be used to create a pseudo Gantt view. This could be a great feature for collaborating on larger projects.\n\nLike Word and Google Docs, Paper has popular features like commenting, version history, and live collaboration.\n\nIt may sound corny, but the default stylesheet for the document is really nice. Not Bear nice, but a close second. I absolutely hate the default stylesheets in Word, Onenote and most other tools.\nWhen writing long documents, you get a hiearchy map on the right side of the Paper document to allow you to jump quickly to headings in your document.\n\nYou can export your document to Word for finalization, or if you don't need to make any edits, you can export your document to PDF.\n\nThere's a presentation mode for your document, but I haven't found a good use for that feature.\n\n\n\n## Deficiencies\n\nWhile I am really liking Paper *a lot*, the user experience isn't all sunshine and rainbows. If the editing experience were not so good, I would consider some of these deficiencies to be deal breakers:\n\n\n- The Android app experience is horrible. You can't dig for a file based on location. It's basically an \"all\" or \"favorites\" view. This is fixable, but I have to admit, it is very annoying.\n- No desktop application. At any given moment, I have way too many browser windows open, each having too many tabs. Finding the window containing a Paper document is an exercise in patience. If I could at least have a dedicated Paper button in my task bar, that would save me a lot of stress.\n- Paper documents are server-side documents. They are not real documents like Word or text documents. In your local Dropbox folders, the files are basically links to the Paper web app. If you have any hangups about having readable local copies, you're going to absolutely hate this about Paper. If your Internet goes out or the Paper service goes down, you are f-ed. I think a Desktop app that can have local copies would mitigate any concerns related to this.\n- No easy conversion feature for existing Markdown documents. I couldn't find any way to convert my existing Markdown notes to paper short of opening the file, pasting it a new Paper document and deleting the Markdown file.\n\n\n# Verdict\n\nAs I mentioned earlier, whether Paper is ideal for you depends on your own preferences. When it came out in 2015, I thought very little to nothing about it. I was relatively unimpressed.\n\nYears later, after giving it a new attempt, I find the application to be a revelation. It has improved so much that it has quickly become my writing tool of choice. In fact, the draft of this blog was written in Paper and pasted into my static site generator.\n\nPaper may not be for you, but if you care about using Markdown for writing, you should definitely give it another shot. You might be pleasantly surprised at how good it is.\n",
    "html": "<h1 id=\"note-taking-hell\">Note Taking Hell</h1>\n<p>It&#39;s no secret that I&#39;ve been hunting for the &quot;perfect&quot; note taking application for years now.</p>\n<p>I dropped Evernote a few years ago as a multi-purpose tool, and have been trying to find a replacement ever since.</p>\n<p>Note taking is a very personal in that you develop some very specific tool and/or process preferences that you don&#39;t really want to compromise on. What works for one person may not work for another.</p>\n<h1 id=\"my-own-criteria\">My Own Criteria</h1>\n<p>For me, my core requirements, in no particular order (they are numbered for reference), are/<em>were</em>:</p>\n<ol>\n<li>A Windows native desktop client</li>\n<li>The ability to have my notes in a hierarchical file structure that was available in a tree view (more important on the desktop than mobile)</li>\n<li>Cloud sync or storage</li>\n<li>Live conversion from <a href=\"https://en.wikipedia.org/wiki/Markdown\">Markdown</a> to formatted text <em>without</em> having a preview pane</li>\n<li>Ability to <em>access</em> and <em>read</em> my notes from my Android phone. Editing and creating is only a <em>nice to have</em>, since I&#39;m pretty much useless with a touchscreen keyboard.</li>\n<li>The occasional ability to collaborate on notes/docs with others (this one&#39;s not a deal breaker)</li>\n</ol>\n<p>Criteria that I <em>thought</em> were important but ended up being unimportant:</p>\n<ul>\n<li>Web clipping</li>\n<li>Pen support</li>\n</ul>\n<p>I always found that web clipping polluted my notes a little, and I recently switched to using <a href=\"https://wallabag.org/en\">Wallabag</a> for all my bookmarks and web clippings. Wallabag is very similar to Pocket, and it&#39;s been working well for me so far.</p>\n<p>For years, I&#39;ve had this crazy notion that I wanted an electronic version of the paper notebook that I bring to meetings. The problem is that the available solutions work better in my imagination than they do in real life. I&#39;ve pretty much given up on the idea of a stylus-based tool, and no longer consider it meaningful criteria in determining what type of note taking tool(s) I use.</p>\n<h1 id=\"options-i-considered\">Options I Considered</h1>\n<p>With my criteria considered, some picks I tried and considered were:</p>\n<ul>\n<li>A folder full of Markdown files</li>\n<li>OneNote</li>\n<li>Google Docs</li>\n<li><a href=\"https://joplinapp.org/\">Joplin</a></li>\n<li><a href=\"https://wiki.js.org/\">WikiJS</a></li>\n<li><a href=\"https://www.bookstackapp.com/\">Bookstack</a></li>\n<li><a href=\"https://www.dokuwiki.org/dokuwiki\">Dokuwiki</a></li>\n<li><a href=\"https://marktext.app/\">MarkText</a></li>\n</ul>\n<p>The one option that did look good to me was <a href=\"https://bear.app/\">Bear.app</a>, but it&#39;s really only for people in the Apple ecosystem, which I&#39;m no longer a part of.</p>\n<p>Even if they do eventually support Windows and Android, I don&#39;t know that I&#39;d switch to Bear, given my experience with applications that are Apple-centric. For example, I&#39;ve always felt like the Windows and Android clients for 1Password were second-class citizens in terms of the product line.</p>\n<h2 id=\"a-folder-full-of-markdown-files\">A folder full of Markdown files</h2>\n<p>One of the first things I tried was a Dropbox folder full of notes using a text editor like <a href=\"https://www.sublimetext.com/\">Sublime Text</a>. This method wasn&#39;t horrible, but the problem is that I have multiple text editors open at any given time, and it got hard finding the right window. Having said that, the solution I&#39;m using now has the same problem, except within a web browser.</p>\n<p>Requirements satisfied: 1, 2, 3, 5</p>\n<h2 id=\"onenote\">OneNote</h2>\n<p>I have a love/hate relationship with OneNote. On one hand, it&#39;s very powerful, on the other hand, it has so many user interface quirks that drive me bonkers. It&#39;s also not really a Markdown centric tool, even though it has a few Markdown-like shortcuts, like using asterisks to start bullet lists.</p>\n<p>Requirements satisfied: 1, 2, 3, 4 (limited), 5, 6</p>\n<h2 id=\"google-docs\">Google Docs</h2>\n<p>Google Docs is fine, but the experience feels more like using a traditional word processor than a note taking tool. Also, it&#39;s not Markdown centric.</p>\n<p>Requirements satisfied: 2, 3, 4 (limited), 5, 6</p>\n<h2 id=\"joplin\">Joplin</h2>\n<p>Joplin is a Markdown centric alternative to Evernote. It lets you sync your notes using Dropbox. It&#39;s pretty good, and has a web clipper that works quite well. I think the main weakness of Joplin is that it it doesn’t do live Markdown conversion the way I’d like it to.</p>\n<p>Requirements satisfied: 1, 2, 3, 5</p>\n<h2 id=\"wikijs\">WikiJS</h2>\n<p>WikiJS is a self-hosted wiki. It has a <em>lot</em> of potential, but as of the time of writing, it&#39;s not quite there yet for me to want to use it daily. To be able to use it outside of my LAN, however, I&#39;d have to open up a firewall port, or host it on a server somewhere, which is something I’m not interested in doing.</p>\n<p>Requirements satisfied: 2, 3, 5, 6</p>\n<h2 id=\"bookstack\">Bookstack</h2>\n<p>Bookstack must be <em>the</em> most recommended note taking tool on <a href=\"https://www.reddit.com/r/selfhosted\">/r/selfhosted</a>. I gave it a shot, bailed, and then gave it a shot again. For note taking, it had way too many quirks with respect to the user interface that just annoyed the hell out of me. If, however, I was authoring a book, it would probably be my first choice for that task.</p>\n<p>Requirements satisfied: 2, 3, 5, 6</p>\n<h2 id=\"dokuwiki\">Dokuwiki</h2>\n<p>Dokuwiki is a simple file based Wiki. It&#39;s ok, but I struggled with the idea of using it every day. It just wasn&#39;t very enjoyable to use.</p>\n<p>Requirements satisfied: 2, 3, 5, 6</p>\n<h2 id=\"marktext\">MarkText</h2>\n<p>MarkText is similar to Bear, but lacking much of Bear&#39;s polish. It has a lot of potential, but it&#39;s still too buggy and quirky at the time of writing.</p>\n<p>Requirements satisfied: 1, 2, 3, 4, 5</p>\n<h1 id=\"no-clear-winners\">No Clear Winners</h1>\n<p>So there is obviously no tool that checks all of my 6 main requirements completely. Short of writing my own tool (which I considered, but decided I had other projects more worthy of my time), I had to give up on 100% coverage of my requirements. The solution I ultimately choose would obviously require me to compromise on what I want.</p>\n<h1 id=\"revisiting-paper\">Revisiting Paper</h1>\n<p>I tried Paper way back when Dropbox announced it, but honestly, it left no lasting impression on me.</p>\n<p>I gave it another cursory shot a few weeks ago (after upgrading to a paid Dropbox subscription), and discovered that its live Markdown conversion is <em>excellent</em>. It is definitely better than MarkText in this regard.</p>\n<p>It wasn&#39;t until I had to collaborate on a server installation document that I was truly sold on Paper.\nBefore I get into the nuts and bolts of Paper, the requirements it satisfies are 2, 3, 4, 5, 6.\nRight now, there&#39;s no desktop client that&#39;s been released to the public. I&#39;m hoping they release <em>something</em>, even if it&#39;s just an Electron app. I need something that occupies its own button on my taskbar instead of having to cycle through my browser windows to find my Notes. Having said that, in daily use, I am finding that Paper is a fantastic note taking tool.</p>\n<h2 id=\"markdown-support\">Markdown Support</h2>\n<p>The live conversion of Markdown works very well in Paper. The reason why Markdown support is so important to me is that it saves me a lot of time. When I&#39;m writing documentation, the ability to style documents using markup alone is incredibly powerful. There is no mousing around for styling or setting heading levels. I find pumping out documentation to be a noticeably faster and smoother experience.</p>\n<p>So not only do I now use Paper for notes, I also use it for work-related documents.</p>\n<p>Where I can, I&#39;m actually writing documentation in Paper and exporting to Word or PDF.\nI can say without any reservations that the editing experience in Paper is the main driver for it being my daily writing tool, <em>in spite</em> of any glaring weaknesses it may have.</p>\n<h2 id=\"other-useful-features-and-details\">Other Useful Features and Details</h2>\n<p>The checklist feature in Dropbox is pretty darned cool. You can assign dates and people to checklist items, and get notifications too. Paper can also aggregate the checklists on all your Paper documents into a single view.</p>\n<p>The implementation of this feature has me rethinking how I approach project management tools in general. I still have to do some practical experiments with Paper in this regard, but I have a feeling that it can do what I need, which is saying a lot.</p>\n<p>There&#39;s a Timeline feature that lets you insert a horizontal timeline, which can be used to create a pseudo Gantt view. This could be a great feature for collaborating on larger projects.</p>\n<p>Like Word and Google Docs, Paper has popular features like commenting, version history, and live collaboration.</p>\n<p>It may sound corny, but the default stylesheet for the document is really nice. Not Bear nice, but a close second. I absolutely hate the default stylesheets in Word, Onenote and most other tools.\nWhen writing long documents, you get a hiearchy map on the right side of the Paper document to allow you to jump quickly to headings in your document.</p>\n<p>You can export your document to Word for finalization, or if you don&#39;t need to make any edits, you can export your document to PDF.</p>\n<p>There&#39;s a presentation mode for your document, but I haven&#39;t found a good use for that feature.</p>\n<h2 id=\"deficiencies\">Deficiencies</h2>\n<p>While I am really liking Paper <em>a lot</em>, the user experience isn&#39;t all sunshine and rainbows. If the editing experience were not so good, I would consider some of these deficiencies to be deal breakers:</p>\n<ul>\n<li>The Android app experience is horrible. You can&#39;t dig for a file based on location. It&#39;s basically an &quot;all&quot; or &quot;favorites&quot; view. This is fixable, but I have to admit, it is very annoying.</li>\n<li>No desktop application. At any given moment, I have way too many browser windows open, each having too many tabs. Finding the window containing a Paper document is an exercise in patience. If I could at least have a dedicated Paper button in my task bar, that would save me a lot of stress.</li>\n<li>Paper documents are server-side documents. They are not real documents like Word or text documents. In your local Dropbox folders, the files are basically links to the Paper web app. If you have any hangups about having readable local copies, you&#39;re going to absolutely hate this about Paper. If your Internet goes out or the Paper service goes down, you are f-ed. I think a Desktop app that can have local copies would mitigate any concerns related to this.</li>\n<li>No easy conversion feature for existing Markdown documents. I couldn&#39;t find any way to convert my existing Markdown notes to paper short of opening the file, pasting it a new Paper document and deleting the Markdown file.</li>\n</ul>\n<h1 id=\"verdict\">Verdict</h1>\n<p>As I mentioned earlier, whether Paper is ideal for you depends on your own preferences. When it came out in 2015, I thought very little to nothing about it. I was relatively unimpressed.</p>\n<p>Years later, after giving it a new attempt, I find the application to be a revelation. It has improved so much that it has quickly become my writing tool of choice. In fact, the draft of this blog was written in Paper and pasted into my static site generator.</p>\n<p>Paper may not be for you, but if you care about using Markdown for writing, you should definitely give it another shot. You might be pleasantly surprised at how good it is.</p>\n",
    "timestamp": "2020-01-23T21:30:00.000Z",
    "year": 2020,
    "month": 1,
    "month_name": "January",
    "day": 23,
    "slug": "dropbox-paper-is-surprisingly-good"
  },
  {
    "title": "Basecamp's Guide To Internal Communication",
    "tags": null,
    "publish_date": "2020-01-10 12:04",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\r\nBasecamp published their [guide to internal communication](https://basecamp.com/guides/how-we-communicate) recently, and it is insightful and excellent.\r\n\r\nSome highlights:\r\n\r\n> Meetings are the last resort, not the first option.\r\n>\r\n> ...\r\n>\r\n> If your words can be perceived in different ways, they'll be understood in the way which does the most harm.\r\n>\r\n> ...\r\n>\r\n> \"Now\" is often the wrong time to say what just popped into your head. It's better to let it filter it through the sieve of time. What's left is the part worth saying.\r\n>\r\n> ...\r\n>\r\n> Write at the right time. Sharing something at 5pm may keep someone at work longer. You may have some spare time on a Sunday afternoon to write something, but putting it out there on Sunday may pull people back into work on the weekends. Early Monday morning communication may be buried by other things. There may not be a perfect time, but there's certainly a wrong time. Keep that in mind when you hit send.\r\n\r\nI highly recommend that you give the article a read.\r\n",
    "html": "<p>Basecamp published their <a href=\"https://basecamp.com/guides/how-we-communicate\">guide to internal communication</a> recently, and it is insightful and excellent.</p>\n<p>Some highlights:</p>\n<blockquote>\n<p>Meetings are the last resort, not the first option.</p>\n<p>...</p>\n<p>If your words can be perceived in different ways, they&#39;ll be understood in the way which does the most harm.</p>\n<p>...</p>\n<p>&quot;Now&quot; is often the wrong time to say what just popped into your head. It&#39;s better to let it filter it through the sieve of time. What&#39;s left is the part worth saying.</p>\n<p>...</p>\n<p>Write at the right time. Sharing something at 5pm may keep someone at work longer. You may have some spare time on a Sunday afternoon to write something, but putting it out there on Sunday may pull people back into work on the weekends. Early Monday morning communication may be buried by other things. There may not be a perfect time, but there&#39;s certainly a wrong time. Keep that in mind when you hit send.</p>\n</blockquote>\n<p>I highly recommend that you give the article a read.</p>\n",
    "timestamp": "2020-01-10T17:04:00.000Z",
    "year": 2020,
    "month": 1,
    "month_name": "January",
    "day": 10,
    "slug": "basecamps-guide-to-internal-communication"
  },
  {
    "title": "Check out my Articles",
    "tags": null,
    "publish_date": "2020-01-06 12:02",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\r\nAs mentioned in my first post, I have an [Articles](/articles) section on the site where I'll be posting evergreen articles that will continue to be updated over time.\r\n\r\nI have two articles in place now:\r\n\r\n1. [The Windows Software I use to Stay Productive](/articles/my-favorite-self-hosted-apps) - This is a list of software that I recommend for Windows users.\r\n2. [My Favorite Self-Hosted Applications](/articles/useful-windows-apps) - This is a list of mostly Docker containers (for now) that I recommend running in your own environment.\r\n\r\nI have a queue of other useful articles on their way, and will announce their creation or updates here on the blog.\r\n",
    "html": "<p>As mentioned in my first post, I have an <a href=\"/articles\">Articles</a> section on the site where I&#39;ll be posting evergreen articles that will continue to be updated over time.</p>\n<p>I have two articles in place now:</p>\n<ol>\n<li><a href=\"/articles/my-favorite-self-hosted-apps\">The Windows Software I use to Stay Productive</a> - This is a list of software that I recommend for Windows users.</li>\n<li><a href=\"/articles/useful-windows-apps\">My Favorite Self-Hosted Applications</a> - This is a list of mostly Docker containers (for now) that I recommend running in your own environment.</li>\n</ol>\n<p>I have a queue of other useful articles on their way, and will announce their creation or updates here on the blog.</p>\n",
    "timestamp": "2020-01-06T17:02:00.000Z",
    "year": 2020,
    "month": 1,
    "month_name": "January",
    "day": 6,
    "slug": "check-out-my-articles-section"
  },
  {
    "title": "Convert an Outlook PST to JSON",
    "tags": null,
    "publish_date": "2020-01-06 12:00",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\r\nI had to archive an Outlook mailbox to a PST file recently, but I'm not a huge fan of using Outlook for finding e-mails.\r\n\r\nI looked around for tools that would convert a PST to JSON so I could load my data into something like Postgresql, but I didn't\r\nfind anything that was free (I only need to do the conversion once).\r\n\r\nI ended up searching for an NPM that could extract objects from a PST, and found [epfromer's pst-extractor.](https://github.com/epfromer/pst-extractor).\r\n\r\nUsing that NPM, I made a simple command line tool for Windows that can extract a PST into a JSON file.\r\n\r\nSince my requirements were modest (one time use, reasonably sized PST file), I didn't really design it to scale.\r\nIt doesn't support password protected PSTs, and I can't guarantee that it will run on a giant PST file if your machine doesn't have enough memory, but\r\nit's there if you need the functionality.\r\n\r\nTo use it, just download the [executable from Github](https://github.com/braintapper/pst_to_json/releases).\r\n\r\nThe command structure is pretty straightforward. From the directory of the executable, use:\r\n\r\n```\r\npst_to_json -s /path/to/file.pst -d /path/to/output.json\r\n```\r\n\r\nThere are some [additional switches](https://github.com/braintapper/pst_to_json/blob/master/readme.md), but the above command is all you need to accomplish the task.\r\n",
    "html": "<p>I had to archive an Outlook mailbox to a PST file recently, but I&#39;m not a huge fan of using Outlook for finding e-mails.</p>\n<p>I looked around for tools that would convert a PST to JSON so I could load my data into something like Postgresql, but I didn&#39;t\nfind anything that was free (I only need to do the conversion once).</p>\n<p>I ended up searching for an NPM that could extract objects from a PST, and found <a href=\"https://github.com/epfromer/pst-extractor\">epfromer&#39;s pst-extractor.</a>.</p>\n<p>Using that NPM, I made a simple command line tool for Windows that can extract a PST into a JSON file.</p>\n<p>Since my requirements were modest (one time use, reasonably sized PST file), I didn&#39;t really design it to scale.\nIt doesn&#39;t support password protected PSTs, and I can&#39;t guarantee that it will run on a giant PST file if your machine doesn&#39;t have enough memory, but\nit&#39;s there if you need the functionality.</p>\n<p>To use it, just download the <a href=\"https://github.com/braintapper/pst_to_json/releases\">executable from Github</a>.</p>\n<p>The command structure is pretty straightforward. From the directory of the executable, use:</p>\n<pre><code>pst_to_json -s /path/to/file.pst -d /path/to/output.json</code></pre><p>There are some <a href=\"https://github.com/braintapper/pst_to_json/blob/master/readme.md\">additional switches</a>, but the above command is all you need to accomplish the task.</p>\n",
    "timestamp": "2020-01-06T17:00:00.000Z",
    "year": 2020,
    "month": 1,
    "month_name": "January",
    "day": 6,
    "slug": "converting-an-outlook-pst-to-json"
  },
  {
    "title": "So I Wrote a Database Migrations NPM",
    "tags": null,
    "publish_date": "2019-12-30 12:00",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\r\nI've been working on making Docker containers of my personal Nodejs projects lately, and for those that rely on a relational database (namely Postgresql), I wanted to be able to run [database migrations](https://en.wikipedia.org/wiki/Schema_migration) on them locally to make updates easier. To be clear, I'm not talking about [data migrations](https://en.wikipedia.org/wiki/Data_migration), which are a completely different thing.\r\n\r\nFor database migrations outside of Ruby on Rails, I've been using [Liquibase](http://www.liquibase.org/), and more recently, [Flyway](https://flywaydb.org/). They're both perfectly fine tools, but they also require Java, which means one may need to [consider the implications of how Java licenses work](https://www.itjungle.com/2019/04/03/ibm-clarifies-java-options-following-oracle-license-crackdown/).\r\n\r\nAs it relates to migrations, I subscribe to the [forward migrations only philosophy](https://nickcraver.com/blog/2016/05/03/stack-overflow-how-we-do-deployment-2016-edition/#database-migrations), which means my requirements are relatively simple. All I need to do is scan a pre-specified directory of SQL files and run only the new SQL files. The onus is on me for providing clean, error-free SQL files, so I don't need to make a migration tool very smart.\r\n\r\nI did look at existing libraries on NPMJS, but I didn't see any having a workflow similar to Flyway, which has been my tool of choice.\r\n\r\nYou might be getting the impression that I suffer from [NIH (Not Invented Here) syndrome](https://en.wikipedia.org/wiki/Not_invented_here), and you could be right. But my experience with some software is that there are always some elements that I find incredibly frustrating or incompatible with the way I work, and I end up spending significantly more time working around those issues than I would have if I had just written something from scratch.\r\n\r\nMy NPM, named [pg-forward-migrations](https://github.com/braintapper/pg-forward-migrations) is designed to do one very specific task well, and took a few hours to write. I spent more time figuring out how to use Liquibase the first time I used it, so in this particular case, the NIH concern is a wash.\r\n\r\nAll this NPM does is run sequence of SQL statements against a Postgresql database. The workflow is inspired by Flyway in that it uses an easy-to-remember naming convention, and it tracks completed migrations by writing to a migration table in the target database. That's it. It's not rocket science, nor is it attempting to be a replacement for a multi-platform, enterprise-class database migration tool.\r\n\r\nAt some point, I will probably use this NPM to create command line executable, but at the moment, it's not a priority.\r\n\r\nIn any case, if you've got a need for a forward migration tool for Postgresql/Node, give the NPM a whirl.\r\n",
    "html": "<p>I&#39;ve been working on making Docker containers of my personal Nodejs projects lately, and for those that rely on a relational database (namely Postgresql), I wanted to be able to run <a href=\"https://en.wikipedia.org/wiki/Schema_migration\">database migrations</a> on them locally to make updates easier. To be clear, I&#39;m not talking about <a href=\"https://en.wikipedia.org/wiki/Data_migration\">data migrations</a>, which are a completely different thing.</p>\n<p>For database migrations outside of Ruby on Rails, I&#39;ve been using <a href=\"http://www.liquibase.org/\">Liquibase</a>, and more recently, <a href=\"https://flywaydb.org/\">Flyway</a>. They&#39;re both perfectly fine tools, but they also require Java, which means one may need to <a href=\"https://www.itjungle.com/2019/04/03/ibm-clarifies-java-options-following-oracle-license-crackdown/\">consider the implications of how Java licenses work</a>.</p>\n<p>As it relates to migrations, I subscribe to the <a href=\"https://nickcraver.com/blog/2016/05/03/stack-overflow-how-we-do-deployment-2016-edition/#database-migrations\">forward migrations only philosophy</a>, which means my requirements are relatively simple. All I need to do is scan a pre-specified directory of SQL files and run only the new SQL files. The onus is on me for providing clean, error-free SQL files, so I don&#39;t need to make a migration tool very smart.</p>\n<p>I did look at existing libraries on NPMJS, but I didn&#39;t see any having a workflow similar to Flyway, which has been my tool of choice.</p>\n<p>You might be getting the impression that I suffer from <a href=\"https://en.wikipedia.org/wiki/Not_invented_here\">NIH (Not Invented Here) syndrome</a>, and you could be right. But my experience with some software is that there are always some elements that I find incredibly frustrating or incompatible with the way I work, and I end up spending significantly more time working around those issues than I would have if I had just written something from scratch.</p>\n<p>My NPM, named <a href=\"https://github.com/braintapper/pg-forward-migrations\">pg-forward-migrations</a> is designed to do one very specific task well, and took a few hours to write. I spent more time figuring out how to use Liquibase the first time I used it, so in this particular case, the NIH concern is a wash.</p>\n<p>All this NPM does is run sequence of SQL statements against a Postgresql database. The workflow is inspired by Flyway in that it uses an easy-to-remember naming convention, and it tracks completed migrations by writing to a migration table in the target database. That&#39;s it. It&#39;s not rocket science, nor is it attempting to be a replacement for a multi-platform, enterprise-class database migration tool.</p>\n<p>At some point, I will probably use this NPM to create command line executable, but at the moment, it&#39;s not a priority.</p>\n<p>In any case, if you&#39;ve got a need for a forward migration tool for Postgresql/Node, give the NPM a whirl.</p>\n",
    "timestamp": "2019-12-30T17:00:00.000Z",
    "year": 2019,
    "month": 12,
    "month_name": "December",
    "day": 30,
    "slug": "pg-forward-migrations"
  },
  {
    "title": "Welcome to the New Site",
    "tags": null,
    "publish_date": "2019-12-29 12:00",
    "updated_date": null,
    "featured": false,
    "author": "Steven Ng",
    "__content": "\r\n\r\nWell it's been a while since the site has been updated. A *long* while, actually.\r\n\r\nIt's been a long time coming, but I forced myself over the holidays to revamp the site, and here it is.\r\n\r\nThings are going to be rough for a little while, as this is a work in progress, and I've opted to go live with a buggy site as opposed to leaving a placeholder page up. This should force me to iterate more quickly and more often.\r\n\r\nSo before I rebuilt the site, I went through a lot of hand-wringing deciding how to publish this site.\r\n\r\nShould I use a static generator like Jekyll? A GUI type tool like MarsEdit? Should I write my own tool? Wordpress (no f-ing way)? A hosted site like Squarespace?\r\n\r\nI ended up choosing a hodgepodge of [Svelte](https://svelte.dev/) and [Sapper](https://sapper.svelte.dev/), with some preprocessing using [Gulp](https://gulpjs.com/). I've already been immersing myself in Svelte for the past couple of months, so I figured I may as well stick with that for my site too. Once the site is somewhat stable, I'll try to write up a blog post on what I do to build this site. TLDR; I basically write my content as markdown posts, and have a script to process them into something consumable for my Svelte app.\r\n\r\nThe site's main focus is the blog, but I will have some evergreen content in the form of [articles](/articles) that can help boost your productivity. I plan to publish my list of \"must have\" software and services, among other things.\r\n\r\nThe blog will be mostly made up of a hodgepodge of technical topics, ranging from Cognos, Node, Database and other topics that I find interesting.\r\n\r\nIn the meantime, click on the RSS link at the top of the page to keep up with my new content.\r\n\r\nCheers!\r\n",
    "html": "<p>Well it&#39;s been a while since the site has been updated. A <em>long</em> while, actually.</p>\n<p>It&#39;s been a long time coming, but I forced myself over the holidays to revamp the site, and here it is.</p>\n<p>Things are going to be rough for a little while, as this is a work in progress, and I&#39;ve opted to go live with a buggy site as opposed to leaving a placeholder page up. This should force me to iterate more quickly and more often.</p>\n<p>So before I rebuilt the site, I went through a lot of hand-wringing deciding how to publish this site.</p>\n<p>Should I use a static generator like Jekyll? A GUI type tool like MarsEdit? Should I write my own tool? Wordpress (no f-ing way)? A hosted site like Squarespace?</p>\n<p>I ended up choosing a hodgepodge of <a href=\"https://svelte.dev/\">Svelte</a> and <a href=\"https://sapper.svelte.dev/\">Sapper</a>, with some preprocessing using <a href=\"https://gulpjs.com/\">Gulp</a>. I&#39;ve already been immersing myself in Svelte for the past couple of months, so I figured I may as well stick with that for my site too. Once the site is somewhat stable, I&#39;ll try to write up a blog post on what I do to build this site. TLDR; I basically write my content as markdown posts, and have a script to process them into something consumable for my Svelte app.</p>\n<p>The site&#39;s main focus is the blog, but I will have some evergreen content in the form of <a href=\"/articles\">articles</a> that can help boost your productivity. I plan to publish my list of &quot;must have&quot; software and services, among other things.</p>\n<p>The blog will be mostly made up of a hodgepodge of technical topics, ranging from Cognos, Node, Database and other topics that I find interesting.</p>\n<p>In the meantime, click on the RSS link at the top of the page to keep up with my new content.</p>\n<p>Cheers!</p>\n",
    "timestamp": "2019-12-29T17:00:00.000Z",
    "year": 2019,
    "month": 12,
    "month_name": "December",
    "day": 29,
    "slug": "welcome-to-the-new-site"
  }
]
